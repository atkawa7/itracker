<?xml version="1.0" encoding="UTF-8"?>

<!--
    ITracker persistence layer context.

    DBCP pooling DataSource with a Hibernate local session factory.

    All DAOs are wrapped with a HibernateInterceptor, which automatically
    opens and closes the Hibernate Session if none is bound to the current
    thread. It is only meant to be useful in case DAO methods are called
    outside the scope of a Hibernate transaction, which is otherwise
    responsible for managing the session.

    NB: To prevent calling DAOs outside a transaction context,
    use the getSession(allowCreate=false).
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <!-- DataSource configuration -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="org.hsqldb.jdbcDriver"/>
        <property name="jdbcUrl" value="jdbc:hsqldb:mem:itracker-test"/>
        <property name="user" value="sa"/>
        <property name="password" value=""/>
        <property name="initialPoolSize" value="1"/>
        <property name="minPoolSize" value="1"/>
        <property name="acquireIncrement" value="5"/>
        <property name="maxPoolSize" value="50"/>
        <property name="maxIdleTime" value="300"/>
        <property name="loginTimeout" value="500"/>
    </bean>

    <!-- Hibernate session factory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="hibernateProperties">
            <ref local="hibernateProperties"/>
        </property>
        <property name="mappingResources">
            <ref local="hibernateMappingsList"/>
        </property>
    </bean>

    <bean id="hibernateProperties"
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location">
            <value>hibernate.properties</value>
        </property>
    </bean>

    <bean id="hibernateMappingsList" class="org.springframework.beans.factory.config.ListFactoryBean">
      <property name="sourceList">
          <list>
            <value>/org/itracker/model/Configuration.hbm.xml</value>
            <value>/org/itracker/model/ScheduledTask.hbm.xml</value>
            <value>/org/itracker/model/Language.hbm.xml</value>
            <value>/org/itracker/model/CustomField.hbm.xml</value>
            <value>/org/itracker/model/CustomFieldValue.hbm.xml</value>
            <value>/org/itracker/model/User.hbm.xml</value>
            <value>/org/itracker/model/UserPreferences.hbm.xml</value>
            <value>/org/itracker/model/Permission.hbm.xml</value>
            <value>/org/itracker/model/Project.hbm.xml</value>
            <value>/org/itracker/model/Component.hbm.xml</value>
            <value>/org/itracker/model/Issue.hbm.xml</value>
            <value>/org/itracker/model/Version.hbm.xml</value>
            <value>/org/itracker/model/ProjectScript.hbm.xml</value>
            <value>/org/itracker/model/WorkflowScript.hbm.xml</value>
            <value>/org/itracker/model/IssueAttachment.hbm.xml</value>
            <value>/org/itracker/model/IssueHistory.hbm.xml</value>
            <value>/org/itracker/model/IssueField.hbm.xml</value>
            <value>/org/itracker/model/IssueRelation.hbm.xml</value>
            <value>/org/itracker/model/Notification.hbm.xml</value>
            <value>/org/itracker/model/IssueActivity.hbm.xml</value>
            <value>/org/itracker/model/Report.hbm.xml</value>
          </list>
      </property>
    </bean>

    <!-- Hibernate interceptor to manage the session outside any transaction scope. -->
    <bean id="hibernateInterceptor"
        class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The configuration DAO -->
    <bean id="configurationDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="configurationDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ConfigurationDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="configurationDAOTarget"
        class="org.itracker.persistence.dao.ConfigurationDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The scheduled task DAO -->
    <bean id="scheduledTaskDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="scheduledTaskDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ScheduledTaskDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="scheduledTaskDAOTarget"
        class="org.itracker.persistence.dao.ScheduledTaskDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The language factory -->
    <bean id="languageDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="languageDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.LanguageDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="languageDAOTarget"
        class="org.itracker.persistence.dao.LanguageDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The custom field DAO -->
    <bean id="customFieldDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customFieldDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.CustomFieldDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="customFieldDAOTarget"
        class="org.itracker.persistence.dao.CustomFieldDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The custom field value DAO -->
    <bean id="customFieldValueDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customFieldValueDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.CustomFieldValueDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="customFieldValueDAOTarget"
        class="org.itracker.persistence.dao.CustomFieldValueDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The user DAO -->
    <bean id="userDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.UserDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userDAOTarget"
        class="org.itracker.persistence.dao.UserDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The report factory -->
    <bean id="reportDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="reportDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ReportDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="reportDAOTarget"
        class="org.itracker.persistence.dao.ReportDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The project DAO -->
    <bean id="projectDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="projectDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ProjectDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="projectDAOTarget"
        class="org.itracker.persistence.dao.ProjectDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The component DAO -->
    <bean id="componentDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="componentDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.ComponentDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="componentDAOTarget"
        class="org.itracker.persistence.dao.ComponentDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The version DAO -->
    <bean id="versionDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="versionDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.VersionDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="versionDAOTarget"
        class="org.itracker.persistence.dao.VersionDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The userpreferences factory -->
    <bean id="userPreferencesDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userPreferencesDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.UserPreferencesDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userPreferencesDAOTarget"
        class="org.itracker.persistence.dao.UserPreferencesDAOImpl"
        autowire="autodetect">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
        <constructor-arg ref="userDAO" />
    </bean>

    <!-- The permission DAO -->
    <bean id="permissionDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="permissionDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.PermissionDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="permissionDAOTarget"
        class="org.itracker.persistence.dao.PermissionDAOImpl"
        autowire="byName">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The issue DAO -->
    <bean id="issueDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.IssueDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueDAOTarget"
        class="org.itracker.persistence.dao.IssueDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The issue history DAO -->
    <bean id="issueHistoryDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueHistoryDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.IssueHistoryDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueHistoryDAOTarget"
        class="org.itracker.persistence.dao.IssueHistoryDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
        <constructor-arg ref="issueDAO" />
    </bean>

    <!-- The notification DAO -->
    <bean id="notificationDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="notificationDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.NotificationDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="notificationDAOTarget"
        class="org.itracker.persistence.dao.NotificationDAOImpl"
        autowire="byName">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
        <constructor-arg ref="issueDAO" />
    </bean>

    <!-- The issue relation DAO -->
    <bean id="issueRelationDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueRelationDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.IssueRelationDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueRelationDAOTarget"
        class="org.itracker.persistence.dao.IssueRelationDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The issue attachment DAO -->
    <bean id="issueAttachmentDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueAttachmentDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.IssueAttachmentDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueAttachmentDAOTarget"
        class="org.itracker.persistence.dao.IssueAttachmentDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- The issue activity DAO -->
    <bean id="issueActivityDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="issueActivityDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.IssueActivityDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="issueActivityDAOTarget"
        class="org.itracker.persistence.dao.IssueActivityDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
        <constructor-arg ref="issueDAO" />
    </bean>

    <!-- The workflow script DAO -->
    <bean id="workflowScriptDAO"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="workflowScriptDAOTarget" />
        <property name="proxyInterfaces">
            <value>org.itracker.persistence.dao.WorkflowScriptDAO</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="workflowScriptDAOTarget"
        class="org.itracker.persistence.dao.WorkflowScriptDAOImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

</beans>
